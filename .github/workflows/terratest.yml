name: Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    name: Terraform Linting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Run tflint
      run: |
        tflint 

  terratest:
    name: Terraform Test
    runs-on: ubuntu-latest
    needs: lint 

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: "1.22"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.10.3"
        terraform_wrapper: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.ASSUME_ROLE }}
        role-session-name: github-action-role
        aws-region: ${{ secrets.REGION }}

    - name: Cache Terraform
      uses: actions/cache@v3
      with:
        path: ~/.terraform
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Install dependencies
      run: |
        cd test
        go mod tidy

    - name: Terratest
      if: success() && (github.ref == 'refs/heads/main') && (github.event_name == 'push')
      run: |
        cd test
        go test -v

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: terratest
    environment: production
    if: success()  # Only run if Terratest passes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.10.3"
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE }}
          role-session-name: github-action-role
          aws-region: ${{ secrets.REGION }}

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: ~/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve
